/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import Project.connectionProvider;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.sql.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
/**
 *
 * @author Javiel Figuereo Schade
 * matriculation number: 1324563
 * *************
 * @author Mohamad
 * matriculation number: 1310757
 */
public class NewBook extends javax.swing.JFrame {

    /**
     * Creates new form NewBook
     */
    public NewBook() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        isbnInput = new javax.swing.JTextField();
        isbnLabel = new javax.swing.JLabel();
        addBook = new javax.swing.JButton();
        titleInput = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        authorInput = new javax.swing.JTextField();
        authorLabel = new javax.swing.JLabel();
        publisherInput = new javax.swing.JTextField();
        publisherLabel = new javax.swing.JLabel();
        bookpublishYearInput = new javax.swing.JTextField();
        publicationYearLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        copyAmountLabel = new javax.swing.JLabel();
        copyAmountInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(980, 195));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(24, 27, 52));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        isbnInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(isbnInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 250, -1));

        isbnLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        isbnLabel.setForeground(new java.awt.Color(255, 255, 255));
        isbnLabel.setText("ISBN");
        jPanel1.add(isbnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        addBook.setBackground(new java.awt.Color(48, 50, 78));
        addBook.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addBook.setForeground(new java.awt.Color(255, 255, 255));
        addBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_save_25px.png"))); // NOI18N
        addBook.setText("Save");
        addBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookActionPerformed(evt);
            }
        });
        jPanel1.add(addBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 520, 220, 30));

        titleInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(titleInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 250, -1));

        titleLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("Title");
        jPanel1.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        authorInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(authorInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 250, -1));

        authorLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        authorLabel.setForeground(new java.awt.Color(255, 255, 255));
        authorLabel.setText("Author");
        jPanel1.add(authorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, -1));

        publisherInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(publisherInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 250, -1));

        publisherLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        publisherLabel.setForeground(new java.awt.Color(255, 255, 255));
        publisherLabel.setText("Publisher");
        jPanel1.add(publisherLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        bookpublishYearInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(bookpublishYearInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 250, -1));

        publicationYearLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        publicationYearLabel.setForeground(new java.awt.Color(255, 255, 255));
        publicationYearLabel.setText("Publication Year");
        jPanel1.add(publicationYearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        jPanel3.setBackground(new java.awt.Color(48, 50, 78));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("New Book");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1000, 70));

        copyAmountLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        copyAmountLabel.setForeground(new java.awt.Color(255, 255, 255));
        copyAmountLabel.setText("Copy Amount");
        jPanel1.add(copyAmountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, -1));

        copyAmountInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyAmountInputActionPerformed(evt);
            }
        });
        jPanel1.add(copyAmountInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 250, -1));

        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 102, 153)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 410, 390));

        jButton1.setBackground(new java.awt.Color(48, 50, 78));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 590, 220, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookActionPerformed
        // the save button
       // TODO add your handling code here:
        String isbn = isbnInput.getText();
        String title = titleInput.getText();
        String author = authorInput.getText();
        String publisher = publisherInput.getText();
        String publicationYear = bookpublishYearInput.getText();
        int copyAmount = Integer.parseInt(copyAmountInput.getText());
        int initialCopyAmount = copyAmount;
        int availableCopies = copyAmount;
        int studentIDForTable = 0; // as a filler for the MySQL table, because the table is NOT NULL

    if (selectedFile == null) {
        JOptionPane.showMessageDialog(null, "Please select an image");
        return;
    }

    try {
        Connection con = connectionProvider.getCon();
        
        Statement st = con.createStatement();
        con.setAutoCommit(false);

        // Insert the book information and image data into the book table
        String insertBookSQL = "INSERT INTO book(isbn, title, author, publisher, publicationYear, availableCopies, image) VALUES(?,?,?,?,?,?,?)";
        PreparedStatement insertBookPreparedStatement = con.prepareStatement(insertBookSQL);
        insertBookPreparedStatement.setString(1, isbn);
        insertBookPreparedStatement.setString(2, title);
        insertBookPreparedStatement.setString(3, author);
        insertBookPreparedStatement.setString(4, publisher);
        insertBookPreparedStatement.setString(5, publicationYear);
        insertBookPreparedStatement.setInt(6, copyAmount);
        
          // add the amount of book copies into the table copies in MySQL
                while(copyAmount > 0) {  
                    st.executeUpdate("INSERT INTO copies(isbn,studentID,copyNumber) VALUES('"+isbn+"' ,'"+studentIDForTable+"', '"+copyAmount+"')");
                    copyAmount -= 1;}
        // Read the image data into a byte array
        byte[] imageData = new byte[(int) selectedFile.length()];
        FileInputStream fileInputStream = new FileInputStream(selectedFile);
        fileInputStream.read(imageData);
        insertBookPreparedStatement.setBytes(7, imageData);

        insertBookPreparedStatement.executeUpdate();

       

        con.commit();

        JOptionPane.showMessageDialog(null, "Book: " + title + " (Copies: " + initialCopyAmount + " ) successfully added");
    } catch (SQLIntegrityConstraintViolationException e) {
    JOptionPane.showMessageDialog(null, "Error: The book already exists in the database.");
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: An unexpected error has occurred.");
    e.printStackTrace();
}   
       
       
       /*
        String isbn = isbnInput.getText();
String title = titleInput.getText();
String author = authorInput.getText();
String publisher = publisherInput.getText();
String publicationYear = bookpublishYearInput.getText();
int copyAmount = Integer.parseInt(copyAmountInput.getText());
int initialCopyAmount = copyAmount;
int availableCopies = copyAmount;
int studentIDForTable = 0;// as a filler for the MySQL table, because the table ist NOT NULL;

if (selectedFile == null) {
JOptionPane.showMessageDialog(null, "Please select an image");
return;
}

try {
Connection con = connectionProvider.getCon();
Statement st = con.createStatement();
// Read the image data into a byte array
byte[] imageData = new byte[(int) selectedFile.length()];
FileInputStream fileInputStream = new FileInputStream(selectedFile);
fileInputStream.read(imageData);

// Insert the book information and image data into the book table
st.executeUpdate("INSERT INTO book(isbn, title, author, publisher, publicationYear, copyAmount, availableCopies, image) VALUES('"+isbn+"' ,'"+title+"','"+author+"','"+publisher+"','"+publicationYear+"', '"+copyAmount+"','"+availableCopies+"', '"+imageData+"')");

// add the amount of book copies into the table copies in MySQL
while(copyAmount > 0) {  
    st.executeUpdate("INSERT INTO copies(isbn,studentID,copyNumber) VALUES('"+isbn+"' ,'"+studentIDForTable+"', '"+copyAmount+"')");
    copyAmount -= 1;
}

JOptionPane.showMessageDialog(null,"Book: " + title + " (Copies: " +initialCopyAmount + " ) successfully added");
// close connection to database
con.close();
        }catch (SQLIntegrityConstraintViolationException e) {
    JOptionPane.showMessageDialog(null, "A book with the same ISBN already exists in the database.");
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "An unknown error occured while trying to save the book.");
}
//////////////
/*
        String isbn = isbnInput.getText();
        String title = titleInput.getText();
        String author = authorInput.getText();
        String publisher = publisherInput.getText();
        String publicationYear = bookpublishYearInput.getText();
        int copyAmount = Integer.parseInt(copyAmountInput.getText());
        int initialCopyAmount = copyAmount;
        int availableCopies = copyAmount;
        int studentIDForTable = 0;// as a filler for the MySQL table, because the table ist NOT NULL;
       
        
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String imagePath = selectedFile.getAbsolutePath();

            try {
                Connection con = connectionProvider.getCon();
                Statement st = con.createStatement();

                // Read the image data into a byte array
                byte[] imageData = new byte[(int) selectedFile.length()];
                FileInputStream fileInputStream = new FileInputStream(selectedFile);
                fileInputStream.read(imageData);

                // Insert the book information and image data into the book table
                st.executeUpdate("INSERT INTO book(isbn, title, author, publisher, publicationYear, copyAmount, availableCopies, image) VALUES('"+isbn+"' ,'"+title+"','"+author+"','"+publisher+"','"+publicationYear+"', '"+copyAmount+"','"+availableCopies+"', '"+imageData+"')");

                // add the amount of book copies into the table copies in MySQL
                while(copyAmount > 0) {  
                    st.executeUpdate("INSERT INTO copies(isbn,studentID,copyNumber) VALUES('"+isbn+"' ,'"+studentIDForTable+"', '"+copyAmount+"')");
                    copyAmount -= 1;
                }

                JOptionPane.showMessageDialog(null,"Book: " + title + " (Copies: " +initialCopyAmount + " ) successfully added");
                // close connection to database
                con.close();
            
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error occured, book might already exist");
            }
        }
     
        
        
        /*
        String isbn = isbnInput.getText();
        String title = titleInput.getText();
        String author = authorInput.getText();
        String publisher = publisherInput.getText();
        String publicationYear = bookpublishYearInput.getText();
        int copyAmount = Integer.parseInt(copyAmountInput.getText());
        int initialCopyAmount = copyAmount;
        int availableCopies = copyAmount;
        int studentIDForTable = 0;// as a filler for the MySQL table, because the table ist NOT NULL;
         String imagePath = null;
        
       
        try {
           Connection con = connectionProvider.getCon();
           Statement st = con.createStatement();
           File imageFile = new File(imagePath);
            //st.executeUpdate("INSERT INTO book VALUES('"+isbn+"' ,'"+title+"','"+author+"','"+publisher+"','"+publicationYear+"', '"+copyAmount+"','"+availableCopies+"')");
           // Read the image data into a byte array
            byte[] imageData = new byte[(int) imageFile.length()];
            FileInputStream fileInputStream = new FileInputStream(imageFile);
            fileInputStream.read(imageData);
            
            JFileChooser fileChooser = new JFileChooser();
            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
    // do something with the image path, such as storing it in the database

        // Insert the book information and image data into the book table
        st.executeUpdate("INSERT INTO book(isbn, title, author, publisher, publicationYear, copyAmount, availableCopies, image) VALUES('"+isbn+"' ,'"+title+"','"+author+"','"+publisher+"','"+publicationYear+"', '"+copyAmount+"','"+availableCopies+"', '"+imageData+"')");
                // add the amount of book copies into the table copies in MySQL
                while(copyAmount > 0) {  
                  st.executeUpdate("INSERT INTO copies(isbn,studentID,copyNumber) VALUES('"+isbn+"' ,'"+studentIDForTable+"', '"+copyAmount+"')");
                   copyAmount -= 1;
                }
            
            JOptionPane.showMessageDialog(null,"Book: " + title + " (Copies: " +initialCopyAmount + " ) successfully added");
            // close connection to database
            con.close();
            
        }
            }
        catch(Exception e) {
            
            JOptionPane.showMessageDialog(null,"Error occured, book might already exist");
        }
        */
    }//GEN-LAST:event_addBookActionPerformed

    private void copyAmountInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyAmountInputActionPerformed
        // TODO add your handling code here:a
    }//GEN-LAST:event_copyAmountInputActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // add imgae button
     JFileChooser fileChooser = new JFileChooser();
int result = fileChooser.showOpenDialog(this);
if (result == JFileChooser.APPROVE_OPTION) {
selectedFile = fileChooser.getSelectedFile();
ImageIcon imageIcon = new ImageIcon(selectedFile.getAbsolutePath());
Image image = imageIcon.getImage();
Image newimg = image.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), java.awt.Image.SCALE_SMOOTH);
imageIcon = new ImageIcon(newimg);
jLabel1.setIcon(imageIcon);
}
        
  
     
  
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBook;
    private javax.swing.JTextField authorInput;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField bookpublishYearInput;
    private javax.swing.JTextField copyAmountInput;
    private javax.swing.JLabel copyAmountLabel;
    private javax.swing.JTextField isbnInput;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel publicationYearLabel;
    private javax.swing.JTextField publisherInput;
    private javax.swing.JLabel publisherLabel;
    private javax.swing.JTextField titleInput;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
private File selectedFile;
    JPanel getJPanel2() {
        return jPanel1;
    }
}
