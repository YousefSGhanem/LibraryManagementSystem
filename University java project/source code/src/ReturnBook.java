import java.sql.*;
import Project.connectionProvider;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Nassim Laaraj
 * matriculation number: 1366099
 * *************
 * @author Mohamad
 * matriculation number: 1310757
 * *************
 * @author Javiel Figuereo Schade
 * matriculation number: 1324563
 */
public class ReturnBook extends javax.swing.JFrame {

    /**
     * Creates new form returnBook
     */
    public ReturnBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        returnBook = new javax.swing.JButton();
        returnDueDate = new javax.swing.JTextField();
        dueDateLabel = new javax.swing.JLabel();
        issueDateLabel = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        returnIssueDate = new javax.swing.JTextField();
        studentIDInput = new javax.swing.JTextField();
        studentIDLabel = new javax.swing.JLabel();
        isbnInput = new javax.swing.JTextField();
        isbnLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        titleReturnBook = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(980, 195));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(24, 27, 52));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        returnBook.setBackground(new java.awt.Color(48, 50, 78));
        returnBook.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        returnBook.setForeground(new java.awt.Color(255, 255, 255));
        returnBook.setText("Return Book");
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });
        jPanel1.add(returnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 550, 150, 40));

        returnDueDate.setEditable(false);
        returnDueDate.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(returnDueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 490, 250, 30));

        dueDateLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dueDateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dueDateLabel.setText("Due Date");
        jPanel1.add(dueDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 490, 90, 30));

        issueDateLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        issueDateLabel.setForeground(new java.awt.Color(255, 255, 255));
        issueDateLabel.setText("Issue Date");
        jPanel1.add(issueDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, -1, 30));

        search.setBackground(new java.awt.Color(48, 50, 78));
        search.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 150, 40));

        returnIssueDate.setEditable(false);
        returnIssueDate.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(returnIssueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, 250, 30));

        studentIDInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentIDInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDInputActionPerformed(evt);
            }
        });
        jPanel1.add(studentIDInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 250, 30));

        studentIDLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        studentIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        studentIDLabel.setText("Student ID");
        jPanel1.add(studentIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, -1, 30));

        isbnInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        isbnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnInputActionPerformed(evt);
            }
        });
        jPanel1.add(isbnInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 250, 30));

        isbnLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        isbnLabel.setForeground(new java.awt.Color(255, 255, 255));
        isbnLabel.setText("ISBN");
        isbnLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        isbnLabel.setMaximumSize(new java.awt.Dimension(43, 22));
        isbnLabel.setMinimumSize(new java.awt.Dimension(43, 22));
        isbnLabel.setPreferredSize(new java.awt.Dimension(43, 22));
        jPanel1.add(isbnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 90, -1));

        jPanel3.setBackground(new java.awt.Color(48, 50, 78));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleReturnBook.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        titleReturnBook.setForeground(new java.awt.Color(255, 255, 255));
        titleReturnBook.setText("Return Book");
        jPanel3.add(titleReturnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1000, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 1000));

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isbnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnInputActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        //Search Button :
        String isbn = isbnInput.getText();
        String studentID = studentIDInput.getText();
        try{
            Connection con=connectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("SELECT * FROM issue1 WHERE isbn='"+isbn+"'AND studentID='"+studentID+"'");
            if(rs.next()){
                returnIssueDate.setText(rs.getString(5));
                returnDueDate.setText(rs.getString(6));
                isbnInput.setEditable(false);
                studentIDInput.setEditable(false);
            }
            else{
                JOptionPane.showMessageDialog(null,"Book is not issued to this student");
            }
            // close connection to database
            con.close();
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Connection Error");
        }
    }//GEN-LAST:event_searchActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed
        // TODO add your handling code here:
        // Return button :
        
       String isbn = isbnInput.getText(); // in our case its the book isbn not the id @Nassim
       String studentID = studentIDInput.getText();
       
       if(updateBookCopies(isbn,studentID)) {
                
                if (updateAvailableCopies(isbn)) {
                    JOptionPane.showMessageDialog(null,"Book successfully returned");
                    /* needed?
                    setVisible(false);
                    new ReturnBook().setVisible(true); */
                }
        } else {
            JOptionPane.showMessageDialog(null,"Error occurred, please try again!");
       
       }
    }//GEN-LAST:event_returnBookActionPerformed

    private void studentIDInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JTextField isbnInput;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JLabel issueDateLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton returnBook;
    private javax.swing.JTextField returnDueDate;
    private javax.swing.JTextField returnIssueDate;
    private javax.swing.JButton search;
    private javax.swing.JTextField studentIDInput;
    private javax.swing.JLabel studentIDLabel;
    private javax.swing.JLabel titleReturnBook;
    // End of variables declaration//GEN-END:variables

    
    private boolean updateAvailableCopies (String isbn) {
        // update the amount of available copies in book table
        try{
        Connection con=connectionProvider.getCon();
        Statement st= con.createStatement();
        ResultSet rs =st.executeQuery("SELECT availableCopies FROM book WHERE isbn = '"+isbn+"'");
        
        if(rs.next()) {
            int availableCopies = rs.getInt(1);
            
        //updating book table that 1 more copy is available
           availableCopies+=1;
           st.executeUpdate("UPDATE book SET availableCopies = '"+availableCopies+"' WHERE isbn = '"+isbn+"'");  
            // close connection to database
            con.close();
           return true;
           
        }
        
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Connection Error");
        }  
         // close connection to database
        return false;
    }
    
    
     
    private boolean updateBookCopies (String isbn,String studentID) {
    // update return status in issue table & update the  studentID int copies table
        try{
        Connection con=connectionProvider.getCon();
        Statement st= con.createStatement();
       
         //update issue table to book is returned
        st.executeUpdate("UPDATE issue1 SET returnBook='Yes' WHERE isbn='"+isbn+"'AND studentID='"+studentID+"'");
            
        //update copies table to "remove" studentID from copies
        st.executeUpdate("UPDATE copies SET studentID = '0' WHERE isbn='"+isbn+"'AND studentID='"+studentID+"'");       
        
        return true;
        }
        
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,"Connection Error");
        }  
        
        return false;
    }
    
    
    
    JPanel getJPanel2() {
        return jPanel1;
    }
}
